name: KBOT-CICD

on:
  push:
    branches:
      - develop

env:
  TARGETARCH: amd64
  TARGETOS: linux
  CGO_ENABLED: 0
  REGISTRY: ghcr.io

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

      - name: Build
        run: make build TARGETARCH=${{ env.TARGETARCH }} TARGETOS=${{ env.TARGETOS }}
  cd:
    name: CD
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: tenariaz
          password: ${{ secrets.GH_TOKEN }}

      - name: Set version
        run: |
          VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Build and push Docker image
        env:
          APP: "kbot"
          REGISTRY: ghcr.io/tenariaz
        run: |
          make image push \
            TARGETARCH=${{ env.TARGETARCH }} \
            TARGETOS=${{ env.TARGETOS }} \
            VERSION=${{ env.VERSION }}

      - name: Update Helm values
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Update version $VERSION"
          git push
